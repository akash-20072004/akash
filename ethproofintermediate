// SPDX-License-Identifier: MIT 

pragma solidity ^0.8.0;

contract ErrorHandling {
    uint256 public balance;

    constructor() {
        balance = 0;
    }

    //  deposit funds
    function deposit(uint256 amount) public {
        require(amount > 0, "Deposit amount must be greater than zero");
        balance += amount;
    }

    //  withdraw funds
    function withdraw(uint256 amount) public {
        require(amount > 0, "Withdraw amount must be greater than zero");
        require(amount <= balance, "Insufficient balance");
        balance -= amount;
    }

    // reset balance
    function resetBalance() public {
        // Using assert to check for conditions that should never fail
        assert(balance >= 0);
        balance = 0;
    }

    //  demonstrating revert
    function transfer(uint256 amount ) public {
        if (amount > balance) {
            revert("Transfer amount exceeds balance");
        }
        balance -= amount;
        //  Initializing a transfer by sending Ether 
        // payable(recipient).transfer(amount);
    }

    //  Checking the balance
    function checkBalance() public view returns (uint256) {
        return balance;
    }
}
